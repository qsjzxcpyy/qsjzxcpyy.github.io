<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>计算机英语单词</title>
    <link href="/2023/11/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D/"/>
    <url>/2023/11/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D/</url>
    
    <content type="html"><![CDATA[<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">instantiated </span>实例化<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>计算机英语单词积累</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机英语单词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023.11.15学习总结--java基础</title>
    <link href="/2023/11/15/2023-11-15%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <url>/2023/11/15/2023-11-15%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h4 id="访问修饰符以及注意事项"><a href="#访问修饰符以及注意事项" class="headerlink" title="访问修饰符以及注意事项"></a>访问修饰符以及注意事项</h4><p><img src="https://cdn.jsdelivr.net/gh/qsjzxcpyy/my_img@master/access_modifier.png" alt="access_modifier"></p><h4 id="11-5日笔记——写工程细节"><a href="#11-5日笔记——写工程细节" class="headerlink" title="11.5日笔记——写工程细节"></a>11.5日笔记——写工程细节</h4><ul><li>写工程时 先实现基本功能，先把代码跑通，复杂功能，跑通后实现。</li><li>写接口函数的时候最好定义一个额外的变量，好习惯，很有用，info。</li><li>using namespace std;最好不要加，可能会导致其他人命名空间冲突。</li><li>写工程最好0 warning .size（) 是无符号整数，不会报warning int 会报warning</li></ul><h4 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h4><ul><li>构造器中可以写get ,set 方法，进行数据合法性判断。</li></ul><h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><ul><li>在初始化子类的时候，必须先初始化父类，即在子类的构造器中默认调用父类的无参构造方法<ul><li>如果父类中没有默认的无参构造方法，则必须在子类中指定使用父类的哪种构造方法</li><li>必须在子类构造器的第一行代码初始化父类</li></ul></li></ul><h4 id="不懂概念汇总"><a href="#不懂概念汇总" class="headerlink" title="不懂概念汇总"></a>不懂概念汇总</h4><ul><li><p>类在实现接口的方法时，不能抛出强制性异常，只能在接口中，或者继承接口的抽象类中抛出该强制性异常</p></li><li><p>最常用的继承接口是没有包含任何方法的接口。</p><ul><li><p>标记接口是没有任何方法和属性的接口.它仅仅表明它的类属于一个特定的类型,供其他代码来测试允许做一些事情。</p></li><li><p>标记接口作用：简单形象的说就是给某个对象打个标（盖个戳），使对象拥有某个或某些特权。</p></li><li><pre><code class="hljs">package java.util;public interface EventListener&#123;&#125;</code></pre></li><li><p>没有任何方法的接口被称为标记接口。标记接口主要用于以下两种目的：</p><ul><li>建立一个公共的父接口：</li></ul><p>正如EventListener接口，这是由几十个其他接口扩展的Java API，你可以使用一个标记接口来建立一组接口的父接口。例如：当一个接口继承了EventListener接口，Java虚拟机(JVM)就知道该接口将要被用于一个事件的代理方案。</p><ul><li><p>向一个类添加数据类型：</p><p>这种情况是标记接口最初的目的，实现标记接口的类不需要定义任何接口方法(因为标记接口根本就没有方法)，但是该类通过多态性变成一个接口类型。</p></li></ul></li></ul></li></ul><h4 id="今日小结"><a href="#今日小结" class="headerlink" title="今日小结"></a>今日小结</h4><p>主要是复习了java一些概念 类，继承，接口，文件，封装，重写，重载等概念。</p>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023_11_14当日笔记及总结——java基础知识</title>
    <link href="/2023/11/14/2023-11-14%E5%BD%93%E6%97%A5%E7%AC%94%E8%AE%B0%E5%8F%8A%E6%80%BB%E7%BB%93/"/>
    <url>/2023/11/14/2023-11-14%E5%BD%93%E6%97%A5%E7%AC%94%E8%AE%B0%E5%8F%8A%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h4 id="java文档注释"><a href="#java文档注释" class="headerlink" title="java文档注释"></a>java文档注释</h4><h5 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h5><p>程序的说明文档，以一整套网页文件形式体现</p><h5 id="基本格式："><a href="#基本格式：" class="headerlink" title="基本格式："></a>基本格式：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * author 小明</span><br><span class="hljs-comment">   *version 1.0</span><br><span class="hljs-comment">   * ...</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><h5 id="生成文档命令："><a href="#生成文档命令：" class="headerlink" title="生成文档命令："></a>生成文档命令：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">javadoc -d d:\\...(要生成文档所要存的目录) -author -version test.java<br></code></pre></td></tr></table></figure><p>[1]: <a href="https://c.biancheng.net/view/6262.html">https://c.biancheng.net/view/6262.html</a>“文档注释详解”</p><h4 id="API-中文文档以及其他资料"><a href="#API-中文文档以及其他资料" class="headerlink" title="API 中文文档以及其他资料"></a>API 中文文档以及其他资料</h4><p>[2]: <a href="https://www.matools.com/">https://www.matools.com/</a>“API中文文档”</p><h4 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h4><p><img src="https://cdn.jsdelivr.net/gh/qsjzxcpyy/my_img@master/Operator_priority.png" alt="运算符优先级"></p><h4 id="标识符命名规则与规范"><a href="#标识符命名规则与规范" class="headerlink" title="标识符命名规则与规范"></a>标识符命名规则与规范</h4><ol><li><p>包名包含多个字母时 小写 （aaa.bbb.ccc），com.公司名.项目名.业务模块名。</p><p>1.1 例如（<code>com.sina.crm.user //用户模块</code>)</p></li><li><p>类名，接口名，所有单词首字母大写（AaaBbbCcc)</p></li><li><p>变量名，方法名，第一个单词首字母小写，从第二个开始，首字母大写 （aaaBbbCcc)</p></li><li><p>常量名，所有字母大写，多个单词时 ，用下划线连接（AAA_BBB_CCC)</p></li></ol><h4 id="break-指定跳出的标签层（不到迫不得已不要用）"><a href="#break-指定跳出的标签层（不到迫不得已不要用）" class="headerlink" title="break 指定跳出的标签层（不到迫不得已不要用）"></a>break 指定跳出的标签层（不到迫不得已不要用）</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br>lable1:<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i ++)&#123;<br>lable2:<br>   <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; m; j ++)&#123;<br>   lable3:<br>       <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; cnt; k ++)&#123;<br>          <span class="hljs-keyword">break</span> lable1;<br>       &#125;<br>   &#125;<br>&#125;<br><span class="hljs-comment">//break 跳出指定的循环层;</span><br><span class="hljs-comment">//continue 与 break 类似</span><br></code></pre></td></tr></table></figure><h4 id="java零散知识点"><a href="#java零散知识点" class="headerlink" title="java零散知识点"></a>java零散知识点</h4><ol><li>局部变量不能加修饰符。</li><li>this指向对象本身， this 可以访问，属性，方法， 构造器。</li><li>this 只能在构造器中访问其他的构造器，并且代码必须写在第一行。</li></ol><h4 id="IDEA-快捷键设置"><a href="#IDEA-快捷键设置" class="headerlink" title="IDEA 快捷键设置"></a>IDEA 快捷键设置</h4><ul><li><p>删除当前行， Ctrl + d</p></li><li><p>复制当前行到下一行 ，alt + shift + 向下箭头</p></li><li><p>补全代码， alt + &#x2F;</p></li><li><p>导入该行需要的类，alt + enter</p></li><li><p>快速格式化代码，Ctrl + alt + L</p></li><li><p>快速运行程序，alt + R</p></li><li><p>生成构造器，alt + insert</p></li><li><p>查看类的层级关系 ，Ctrl + H</p></li><li><p>查看方法再哪个类中， Ctrl + B</p></li><li><p>自动分配变量名， 在new类的后边加<code>.var //例如：(new Scanner(System.in)).var</code></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>java</category>
      
      <category>基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
